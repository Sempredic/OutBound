/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exceltest;

import java.awt.GridLayout;
import java.io.File;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author Vince
 */


public class DatabaseFrame extends javax.swing.JFrame {

    private String selectionType;
    private String dateYear;
    private String dateMonth;
    private String dateDay;
    private String area;
    private String shift;
    private String failDateYear;
    private String failDateMonth;
    private String failDateDay;
    private String failArea;
    private String failShift;
    private ArrayList<String> areaListArray;
    private ArrayList<String> failAreaListArray;
    private ArrayList<String> devicesListArray;
    private TableModel tbModel; 
    private TableModel prodModel; 
    private TableModel failModel;
    private TableModel failEntriesModel;
    private TableModel employeeEntriesModel;
    private TableModel areasEntriesModel;
    private TableModel caseEntriesModel;
    private Object[] tbColumn;
    private Object[] prodColumn;
    private Object[] failColumn;
    private Object[] failEntriesColumn;
    private Object[] employeeTableColumn;
    private Object[] areasTableColumn;
    private Object[] caseTableColumn;
    private int failCellID;
    private int employeesCellID;
    private int areasCellID;
    private int caseEntryID;
    private String year;
    private SimpleDateFormat formatter;
    private Date date;
    
    /**
     * Creates new form DatabaseFrame
     */
    public DatabaseFrame() {
        
        tbModel = new DefaultTableModel();
        prodModel = new DefaultTableModel();
        failModel = new DefaultTableModel();
        failEntriesModel = new DefaultTableModel();
        employeeEntriesModel = new DefaultTableModel();
        areasEntriesModel = new DefaultTableModel();
        caseEntriesModel = new DefaultTableModel();
        selectionType = new String();
        dateYear = new String();
        dateMonth = new String();
        dateDay = new String();
        area = new String();
        shift = new String();
        failDateYear = new String();
        failDateMonth = new String();
        failDateDay = new String();
        failArea = new String();
        failShift = new String();
        areaListArray = new ArrayList<String>(DatabaseObj.getAreaList());
        failAreaListArray = new ArrayList<String>(DatabaseObj.getAreaList());
        devicesListArray = new ArrayList<String>(DatabaseObj.getDevicesList());
        failCellID = 0;
        employeesCellID =0;
        areasCellID =0;
        caseEntryID=0;
        year = String.valueOf(Calendar.getInstance().get(Calendar.YEAR));
        formatter = new SimpleDateFormat("M/d/yyyy");  
        date = new Date();

        if(!areaListArray.contains("All")){
            areaListArray.add("All");
        }
        
        
        

        initComponents();
        initialize();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        typeComboBox = new javax.swing.JComboBox<>();
        entryProdTab = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        theTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        prodTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        failTable = new javax.swing.JTable();
        typeLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        yearTextField = new javax.swing.JFormattedTextField();
        monthCB = new javax.swing.JComboBox<>();
        dayCB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        areaLabel = new javax.swing.JLabel();
        areaComboBox = new javax.swing.JComboBox<>();
        shiftComboBox = new javax.swing.JComboBox<>();
        shiftLabel = new javax.swing.JLabel();
        queryButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        dbTabbedPane = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        dateLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        failYearTextField = new javax.swing.JFormattedTextField();
        failMonthCB = new javax.swing.JComboBox<>();
        failDayCB = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        areaLabel1 = new javax.swing.JLabel();
        failAreaCB = new javax.swing.JComboBox<>();
        failShiftCB = new javax.swing.JComboBox<>();
        shiftLabel1 = new javax.swing.JLabel();
        failQueryButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        failEntriesTable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addFailButton = new javax.swing.JButton();
        failEmployeeField = new javax.swing.JTextField();
        failTypeField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        failDeviceField = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        failListDeleteButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        failListTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        employeesDelButton = new javax.swing.JButton();
        employeesQueryButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        employeeIDField = new javax.swing.JTextField();
        employeeLNameField = new javax.swing.JTextField();
        employeeFNameField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        employeeAddButton = new javax.swing.JButton();
        employeePosField = new javax.swing.JTextField();
        positionLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        employeesTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        areaGoalField = new javax.swing.JTextField();
        areaUpdateButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        areasTable = new javax.swing.JTable();
        areasQueryButton = new javax.swing.JButton();
        dateRangeLabel = new javax.swing.JLabel();
        startLabel = new javax.swing.JLabel();
        endLabel = new javax.swing.JLabel();
        startDateTextField = new javax.swing.JFormattedTextField();
        endDateTextField = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        devicePanel = new javax.swing.JPanel();
        devicesList = new java.awt.List();
        devicesAddButton = new javax.swing.JButton();
        devicesRemoveButton = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        casesTable = new javax.swing.JTable();
        casesQueryButton = new javax.swing.JButton();
        casesValueField = new javax.swing.JTextField();
        casesConditionCB = new javax.swing.JComboBox<>();
        casesFieldCB = new javax.swing.JComboBox<>();
        statusLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        selectorMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Database Tool");
        setResizable(false);

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cell Records" }));
        typeComboBox.setSelectedItem(" ");
        typeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeComboBoxItemStateChanged(evt);
            }
        });

        entryProdTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        theTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        theTable.setModel(tbModel);
        theTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(theTable);

        entryProdTab.addTab("Entries", jScrollPane1);

        prodTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        prodTable.setModel(prodModel);
        prodTable.setEnabled(false);
        jScrollPane2.setViewportView(prodTable);

        entryProdTab.addTab("Entry Prod", jScrollPane2);

        failTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        failTable.setModel(failModel);
        jScrollPane3.setViewportView(failTable);

        entryProdTab.addTab("Entry Fails", jScrollPane3);

        typeLabel.setText("Type");

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dateLabel.setText("Date");

        jLabel2.setText("Day");

        jLabel1.setText("Month");

        yearTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel3.setText("Year");

        areaLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        areaLabel.setText("Area");

        areaComboBox.setModel(new DefaultComboBoxModel(areaListArray.toArray()));
        areaComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                areaComboBoxItemStateChanged(evt);
            }
        });

        shiftComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "All" }));

        shiftLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shiftLabel.setText("Shift");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(dateLabel)
                        .addGap(84, 84, 84))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(monthCB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dayCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(areaLabel)
                            .addComponent(areaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shiftLabel)
                            .addComponent(shiftComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(areaLabel)
                    .addComponent(shiftLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(areaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shiftComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        queryButton.setText("Query");
        queryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(queryButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(queryButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeLabel)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(entryProdTab, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(entryProdTab, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(typeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mainPanel.addTab("Query", jPanel1);

        dbTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dbTabbedPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dbTabbedPaneFocusGained(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));
        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        dateLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dateLabel1.setText("Date");

        jLabel4.setText("Day");

        jLabel5.setText("Month");

        failYearTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel6.setText("Year");

        areaLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        areaLabel1.setText("Area");

        failAreaCB.setModel(new DefaultComboBoxModel(failAreaListArray.toArray()));
        failAreaCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                failAreaCBItemStateChanged(evt);
            }
        });

        failShiftCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        shiftLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        shiftLabel1.setText("Shift");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(dateLabel1)
                        .addGap(84, 84, 84))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(failMonthCB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(failDayCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(failYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(areaLabel1)
                            .addComponent(failAreaCB, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shiftLabel1)
                            .addComponent(failShiftCB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(failMonthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(failDayCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(failYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(areaLabel1)
                    .addComponent(shiftLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(failAreaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(failShiftCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        failQueryButton.setText("Query");
        failQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                failQueryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(failQueryButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(failQueryButton)
                .addContainerGap())
        );

        failEntriesTable.setModel(failEntriesModel);
        jScrollPane4.setViewportView(failEntriesTable);

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Fail Type");

        jLabel8.setText("Tech ID");

        addFailButton.setText("Add Fail");
        addFailButton.setEnabled(false);
        addFailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFailButtonActionPerformed(evt);
            }
        });

        failEmployeeField.setEnabled(false);

        failTypeField.setEnabled(false);

        jLabel9.setText("Device");

        failDeviceField.setEnabled(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8))
                    .addComponent(failEmployeeField)
                    .addComponent(failTypeField)
                    .addComponent(addFailButton, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24))
                    .addComponent(failDeviceField))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(8, 8, 8)
                .addComponent(failEmployeeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(9, 9, 9)
                .addComponent(failDeviceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(failTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(addFailButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(204, 204, 204));

        failListDeleteButton.setText("Delete");

        failListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(failListTable);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(failListDeleteButton)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(failListDeleteButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(290, 290, 290))
        );

        dbTabbedPane.addTab("Fail Entry", jPanel5);

        employeesDelButton.setText("Del Employee");
        employeesDelButton.setEnabled(false);
        employeesDelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeesDelButtonActionPerformed(evt);
            }
        });

        employeesQueryButton.setText("Update/Query");
        employeesQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeesQueryButtonActionPerformed(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Employee ID");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Employee F Name");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Employee L Name");

        employeeAddButton.setText("Add Employee");
        employeeAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeAddButtonActionPerformed(evt);
            }
        });

        positionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        positionLabel.setText("Position");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(positionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(employeeAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(employeeLNameField)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeeFNameField)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeeIDField)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeePosField))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeeIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel11)
                .addGap(2, 2, 2)
                .addComponent(employeeFNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(2, 2, 2)
                .addComponent(employeeLNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(positionLabel)
                .addGap(8, 8, 8)
                .addComponent(employeePosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(employeeAddButton)
                .addGap(21, 21, 21))
        );

        employeesTable.setModel(employeeEntriesModel);
        jScrollPane5.setViewportView(employeesTable);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(employeesQueryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeesDelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(employeesQueryButton)
                        .addGap(71, 71, 71)
                        .addComponent(employeesDelButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        dbTabbedPane.addTab("Employees", jPanel6);

        jPanel15.setBackground(new java.awt.Color(204, 204, 204));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Area Goal");

        areaGoalField.setEnabled(false);

        areaUpdateButton.setText("Update Goal");
        areaUpdateButton.setEnabled(false);
        areaUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaUpdateButtonActionPerformed(evt);
            }
        });

        areasTable.setModel(areasEntriesModel);
        //areasTable.setRowSelectionAllowed(true);
        //areasTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane6.setViewportView(areasTable);

        areasQueryButton.setText("Query");
        areasQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areasQueryButtonActionPerformed(evt);
            }
        });

        dateRangeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateRangeLabel.setText("Date Range");

        startLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startLabel.setText("Start");

        endLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endLabel.setText("End");

        startDateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("M/d/yyyy"))));
        startDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateTextFieldActionPerformed(evt);
            }
        });

        endDateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("M/d/yyyy"))));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("or");

        toLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toLabel.setText("to");

        infoLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        infoLabel.setText("Hold Ctrl+Select/Shift+Select or Click-Drag+Select, to Select Multiple Rows");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateRangeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(areaGoalField)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(startDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(toLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(endDateTextField)
                                    .addComponent(endLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(areasQueryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(areaUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(areaGoalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dateRangeLabel)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startLabel)
                            .addComponent(endLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addComponent(areasQueryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addGap(9, 9, 9)
                        .addComponent(areaUpdateButton))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoLabel)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dbTabbedPane.addTab("Areas", jPanel7);

        devicePanel.setBackground(new java.awt.Color(204, 204, 204));

        for(String item:DatabaseObj.getDevicesList()){
            devicesList.add(item);
            devicesListArray.add(item);
        }

        devicesAddButton.setText("<--Add Device");
        devicesAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devicesAddButtonActionPerformed(evt);
            }
        });

        devicesRemoveButton.setText("Remove-->");
        devicesRemoveButton.setEnabled(false);
        devicesRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devicesRemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout devicePanelLayout = new javax.swing.GroupLayout(devicePanel);
        devicePanel.setLayout(devicePanelLayout);
        devicePanelLayout.setHorizontalGroup(
            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(devicePanelLayout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(devicesList, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(devicesAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(devicesRemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(302, 302, 302))
        );
        devicePanelLayout.setVerticalGroup(
            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(devicePanelLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(devicesList, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(devicePanelLayout.createSequentialGroup()
                        .addComponent(devicesAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(devicesRemoveButton)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(devicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(devicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        dbTabbedPane.addTab("Devices", jPanel8);

        jPanel18.setBackground(new java.awt.Color(204, 204, 204));

        casesTable.setModel(caseEntriesModel);
        casesTable.setEnabled(false);
        casesTable.setRowSelectionAllowed(false);
        casesTable.setShowVerticalLines(false);
        jScrollPane8.setViewportView(casesTable);

        casesQueryButton.setText("Query");
        casesQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casesQueryButtonActionPerformed(evt);
            }
        });

        casesValueField.setEnabled(false);

        casesConditionCB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        casesConditionCB.setEnabled(false);

        casesFieldCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DateOfEntry", "EmployeeID", "CaseID", "TotalUnits", "UserID" }));
        casesFieldCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                casesFieldCBItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(casesFieldCB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(casesQueryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(casesConditionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(casesValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(casesValueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(casesConditionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(casesFieldCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(casesQueryButton)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 852, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        dbTabbedPane.addTab("Cases", jPanel17);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dbTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dbTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.addTab("Database", jPanel2);

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText(" ");

        jMenu1.setText("File");

        selectorMenuItem.setText("Back To Selector");
        selectorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(selectorMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(449, 449, 449))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initialize(){
        
        statusLabel.setText(DatabaseObj.getStatus());
        
        initDates();
        
        theTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
            
                if(selectionType == "Cell Records"){
                    if(theTable.getSelectedRow()!=-1){
                        if(theTable.getValueAt(theTable.getSelectedRow(), 0)!= null){

                            try{

                                Object[][] ob = makeProdObjectFromArray(DatabaseObj.executeGetTechProdRecordsQ((int)theTable.getValueAt(theTable.getSelectedRow(), 0)));
                                prodModel = new DefaultTableModel(ob,prodColumn);
                                prodTable.setModel(prodModel);
                                initProdTableStyle();
                                
                                Object[][] fOb = makeFailObjectFromArray(DatabaseObj.executeGetFailRecordsQ((int)theTable.getValueAt(theTable.getSelectedRow(), 0)));
                                failModel = new DefaultTableModel(fOb,failColumn);
                                failTable.setModel(failModel);
                                initTableStyle(failTable);
                            }catch(Exception e){
                                errorLogger.writeToLogger(e.toString());
                                System.out.println(e.toString());
                            }
                        }
                    }
                }      
            }
        });
        failEntriesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
            
                
                if(failEntriesTable.getSelectedRow()!=-1){
                    if(failEntriesTable.getValueAt(failEntriesTable.getSelectedRow(), 0)!= null){

                        failCellID = (int)failEntriesTable.getValueAt(failEntriesTable.getSelectedRow(), 0);
                        failEmployeeField.setEnabled(true);
                        failDeviceField.setEnabled(true);
                        failTypeField.setEnabled(true);
                        addFailButton.setEnabled(true);
                    }
                }else{
                    failEmployeeField.setEnabled(false);
                    failTypeField.setEnabled(false);
                    addFailButton.setEnabled(false);
                    failDeviceField.setEnabled(false);
                }
                      
            }
        });
        
        employeesTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
            
                
                if(employeesTable.getSelectedRow()!=-1){
                    if(employeesTable.getValueAt(employeesTable.getSelectedRow(), 0)!= null){

                        employeesCellID = (int)employeesTable.getValueAt(employeesTable.getSelectedRow(), 0);
                        employeesDelButton.setEnabled(true);
                    }
                }else{
                    employeesDelButton.setEnabled(false);
                }        
            }
        });

        areasTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
            
                
                if(areasTable.getSelectedRow()!=-1){
                    if(areasTable.getValueAt(areasTable.getSelectedRow(), 0)!= null){

                        areasCellID = (int)areasTable.getValueAt(areasTable.getSelectedRow(), 0);
     
                        areaGoalField.setEnabled(true);
                        areaUpdateButton.setEnabled(true);
                    }
                }else{
                    areaGoalField.setEnabled(false);
                    areaUpdateButton.setEnabled(false);
                }        
            }
        });
        
        tbColumn = new Object[]{"ID","Date","Area","Shift","Total Comp","Net Goal Total","% of Goal","% of Fails"};
        //prodColumn = new Object[]{"TechID","FName","LName","iPhone","iPad","iTouch","Classic","Shuffle","Nano","A.Phone","A.Tab","Wearables","Total"};
        failColumn = new Object[]{"FName","LName","Device","Type"};
        failEntriesColumn = new Object[]{"ID","Date","Area","Shift"};
        employeeTableColumn = new Object[]{"ID","TechID","FName","LName"};
        areasTableColumn = new Object[]{"ID","Date","Area","Shift","Goal"};
        caseTableColumn = new Object[]{"ID","Date","Time","Employee","CaseID","Units","UserID"};
        initProdCol();
        
        tbModel = new DefaultTableModel(tbColumn,0);
        theTable.setModel(tbModel);
        
        initTableStyle(theTable);
        
    }
    
    private void initDates(){
        
        for(int i=1;i<13;i++){
            monthCB.addItem(String.valueOf(i));
            failMonthCB.addItem(String.valueOf(i));
        }
        
        dayCB.addItem("ALL");
        
        for(int j=1;j<32;j++){
            dayCB.addItem(String.valueOf(j));
            failDayCB.addItem(String.valueOf(j));
        }
        
        yearTextField.setText(year);
        failYearTextField.setText(year);
        startDateTextField.setText(formatter.format(date));
        endDateTextField.setText(formatter.format(date));
        
    }
    
    private void initProdTableStyle(){
        
        DefaultTableCellRenderer centerRender = new DefaultTableCellRenderer();
        DefaultTableCellRenderer colRenderer = new DefaultTableCellRenderer();

        colRenderer.setHorizontalAlignment(JLabel.CENTER);
        centerRender.setHorizontalAlignment(JLabel.CENTER);
        
        newTableRenderer renderer = new newTableRenderer((DefaultTableModel)prodModel,centerRender);

        for(int x=0;x<prodTable.getColumnCount();x++){
            prodTable.getColumnModel().getColumn(x).setCellRenderer(renderer);
        }

        prodTable.getTableHeader().setReorderingAllowed(false);
        prodTable.getTableHeader().setResizingAllowed(false); 
    }
    
    private void initTableStyle(JTable Table){
       
        DefaultTableCellRenderer centerRender = new DefaultTableCellRenderer();
    
        centerRender.setHorizontalAlignment(JLabel.CENTER);
        
        for(int x=0;x<Table.getColumnCount();x++){
            Table.getColumnModel().getColumn(x).setCellRenderer(centerRender);
        }

        Table.getTableHeader().setReorderingAllowed(false);
        Table.getTableHeader().setResizingAllowed(false); 
    }
    
    private Object[][] makeObjectFromArray(ArrayList<ArrayList> ar){
        
        if(ar.size()==0){
            JOptionPane.showMessageDialog(this,"No Entry For This Criteria","Try Again", JOptionPane.WARNING_MESSAGE);
        }
        Object[][] ob = new Object[ar.size()][tbColumn.length];
        
        for(int row = 0;row<ar.size();row++){
            for(int col =0;col<tbColumn.length;col++){
                
                if(ar.get(row).get(col) instanceof Double){
                    ob[row][col] = new DecimalFormat(".#").format(ar.get(row).get(col));
                }else{
                    ob[row][col] = ar.get(row).get(col);
                }
                  
            }
        }
        
        return ob;
    }
    
    private Object[][] makeFailEntryObjectFromArray(ArrayList<ArrayList> ar){
        
        if(ar.size()==0){
            JOptionPane.showMessageDialog(this,"No Entry For This Criteria","Try Again", JOptionPane.WARNING_MESSAGE);
        }
        Object[][] ob = new Object[ar.size()][failEntriesColumn.length];
        
        for(int row = 0;row<ar.size();row++){
            for(int col =0;col<failEntriesColumn.length;col++){
                         
                ob[row][col] = ar.get(row).get(col);     
            }
        }
        
        return ob;
    }
    
    private Object[][] makeEntryObjectFromArray(ArrayList<ArrayList> ar,Object[] column){
        
        if(ar.size()==0){
            JOptionPane.showMessageDialog(this,"No Entry For This Criteria","Try Again", JOptionPane.WARNING_MESSAGE);
        }
        Object[][] ob = new Object[ar.size()][column.length];
        
        for(int row = 0;row<ar.size();row++){
            for(int col =0;col<column.length;col++){
                         
                ob[row][col] = ar.get(row).get(col);     
            }
        }
        
        return ob;
    }
    
    private Object[][] makeProdObjectFromArray(ArrayList<ArrayList> ar){
        
        if(ar.size()==0){
            JOptionPane.showMessageDialog(this,"No Entry For This Criteria","Try Again", JOptionPane.WARNING_MESSAGE);
        }
        
        Object[][] ob = new Object[ar.size()+1][prodColumn.length];
        
        for(int row = 0;row<ar.size()+1;row++){
            for(int col =0;col<prodColumn.length;col++){
                
                ob[row][col] = 0;  
            }
        }
        
        for(int row = 0;row<ar.size();row++){
            for(int col =0;col<prodColumn.length;col++){
                
                ob[row][col] = ar.get(row).get(col);
                
                if(col ==0){
                    ob[ar.size()][col] = "Totals";
                }else if(col > 2){
                    if(row<ar.size()){
                        ob[ar.size()][col] = (int)ob[row][col]+(int)ob[ar.size()][col];
                    }   
                }else{
                    ob[ar.size()][col] = " ";
                }    
            }
        }
        
        return ob;
    }
    
    private Object[][] makeFailObjectFromArray(ArrayList<ArrayList> ar){
        
        Object[][] ob = new Object[ar.size()][failColumn.length];
        
        if(ar.size()==0){
            JOptionPane.showMessageDialog(this,"No Fails For This Entry","Fails", JOptionPane.WARNING_MESSAGE);
        }else{
            for(int row = 0;row<ar.size();row++){
                for(int col =0;col<failColumn.length;col++){

                    ob[row][col] = ar.get(row).get(col);     
                }
            }
        }
        
        return ob;
    }
     
    private void queryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryButtonActionPerformed
        // TODO add your handling code here:
        selectionType = (String)typeComboBox.getSelectedItem();
        dateYear = yearTextField.getText();
        dateMonth = (String)monthCB.getSelectedItem();
        dateDay = (String)dayCB.getSelectedItem();
        area = (String)areaComboBox.getSelectedItem();
        shift = (String)shiftComboBox.getSelectedItem();
        
        try{
          
            switch(selectionType){
                case "Cell Records":
                    if(!dateYear.equals("")){
                        
                        Object[][] ob = makeObjectFromArray(DatabaseObj.executeGetCellRecordsQ(dateMonth,dateDay,dateYear, area, shift));
                        tbModel = new DefaultTableModel(ob,tbColumn){
                          public boolean isCellEditable(int rowIndex, int mColIndex) {
                            return false;
                          }
                        };
                        theTable.setModel(tbModel); 
                        initTableStyle(theTable);
                        
                    }else{
                        JOptionPane.showMessageDialog(this,"Year Must Be Entered","Try Again", JOptionPane.WARNING_MESSAGE);
                    }
                    
                    break;

            }
            
            
        }catch(Exception e){
            System.out.println(e.toString());
            errorLogger.writeToLogger(e.toString());
        }
        
    }//GEN-LAST:event_queryButtonActionPerformed

    private void typeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeComboBoxItemStateChanged
        // TODO add your handling code here:
        switch((String)typeComboBox.getSelectedItem()){
            case "Cell Records":
              
                tbModel = new DefaultTableModel(tbColumn,0);
                theTable.setModel(tbModel);
                initTableStyle(theTable);
                
                break;
            case "Tech Records":
          
                Object[] col = {"one","two","three"};
                tbModel = new DefaultTableModel(col,10);
                theTable.setModel(tbModel);
                break;
        }
    }//GEN-LAST:event_typeComboBoxItemStateChanged

    private void areaComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_areaComboBoxItemStateChanged
        // TODO add your handling code here:
        if((String)areaComboBox.getSelectedItem() == "All"){
            shiftComboBox.setEnabled(false);
        }else{
            shiftComboBox.setEnabled(true);
        }
    }//GEN-LAST:event_areaComboBoxItemStateChanged

    private void failAreaCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_failAreaCBItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_failAreaCBItemStateChanged

    private void failQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_failQueryButtonActionPerformed
        // TODO add your handling code here:
        failDateYear = failYearTextField.getText();
        failDateMonth = (String)failMonthCB.getSelectedItem();
        failDateDay = (String)failDayCB.getSelectedItem();
        failArea = (String)failAreaCB.getSelectedItem();
        failShift = (String)failShiftCB.getSelectedItem();
        
        try{
            if(!failDateYear.equals("")){
                        
                Object[][] ob = makeFailEntryObjectFromArray(DatabaseObj.executeGetCellRecordsQ(failDateMonth,failDateDay,failDateYear, failArea, failShift));
                failEntriesModel = new DefaultTableModel(ob,failEntriesColumn){
                  public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                  }
                };
                failEntriesTable.setModel(failEntriesModel); 
                initTableStyle(failEntriesTable);

            }else{
                JOptionPane.showMessageDialog(this,"Year Must Be Entered","Try Again", JOptionPane.WARNING_MESSAGE);
            }
        }catch(Exception e){
            System.out.println(e.toString());
            errorLogger.writeToLogger(e.toString());
        }
        
    }//GEN-LAST:event_failQueryButtonActionPerformed

    private void addFailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFailButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            if(failEmployeeField.getText().length()>0){
                if(failDeviceField.getText().length()>0){
                    if(failTypeField.getText().length()>0){
                        
                        if(DatabaseObj.getEmployeeID(failEmployeeField.getText())!=0){
                            DatabaseObj.executeFailEntriesAppendQ(
                                failCellID, failEmployeeField.getText(),failDeviceField.getText(),failTypeField.getText());
                            
                            JOptionPane.showMessageDialog(this,"Successfully Added","Fail Entry", JOptionPane.WARNING_MESSAGE);
                        }else{
                            JOptionPane.showMessageDialog(this,"Tech Doesn't Exist","Try Again", JOptionPane.WARNING_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"Fail Type Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this,"Device Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this,"Tech ID Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
            }
            
            failEmployeeField.setText("");
            failDeviceField.setText("");
            failTypeField.setText("");
             
        }catch(Exception e){
            
            errorLogger.writeToLogger(e.toString());
        } 
    }//GEN-LAST:event_addFailButtonActionPerformed

    private void employeesQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeesQueryButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            
            Object[][] ob = makeEntryObjectFromArray(DatabaseObj.executeGetEmployeesQ(),employeeTableColumn);
            employeeEntriesModel = new DefaultTableModel(ob,employeeTableColumn){
              public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
              }
            };
            employeesTable.setModel(employeeEntriesModel); 
            initTableStyle(employeesTable);
        }catch(Exception e){
            System.out.println(e.toString());
            errorLogger.writeToLogger(e.toString());
        }
        
    }//GEN-LAST:event_employeesQueryButtonActionPerformed

    private void areasQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areasQueryButtonActionPerformed
        // TODO add your handling code here:
        String startDate = startDateTextField.getText().trim();
        String toDate = endDateTextField.getText().trim();
        
        try{
            
            Object[][] ob = makeEntryObjectFromArray(DatabaseObj.executeGetAreasQ(startDate,toDate),areasTableColumn);
            areasEntriesModel = new DefaultTableModel(ob,areasTableColumn){
              public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
              }
            };
            areasTable.setModel(areasEntriesModel); 
            initTableStyle(areasTable);
        }catch(Exception e){
            System.out.println(e.toString());
            errorLogger.writeToLogger(e.toString());
        }
    }//GEN-LAST:event_areasQueryButtonActionPerformed

    private void employeesDelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeesDelButtonActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(this, "Deleting An Employee Will Also Affect Records Including Them, Continue?","Warning",JOptionPane.YES_NO_OPTION);
        
        if(option ==0){
            try{
                DatabaseObj.executeDeleteEmployeeEntryQ(employeesCellID);
                
                Object[][] ob = makeEntryObjectFromArray(DatabaseObj.executeGetEmployeesQ(),employeeTableColumn);
                employeeEntriesModel = new DefaultTableModel(ob,employeeTableColumn);
                employeesTable.setModel(employeeEntriesModel); 
                initTableStyle(employeesTable);
            }catch(Exception e){
                System.out.println(e.toString());
                errorLogger.writeToLogger(e.toString());
            }
        } 
        
    }//GEN-LAST:event_employeesDelButtonActionPerformed

    private void employeeAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeAddButtonActionPerformed
        // TODO add your handling code here:
        int employeeIDLength = employeeIDField.getText().length();
        if(employeeIDLength >0 && employeeIDLength <5){
            if(employeeFNameField.getText().length()>0){
                if(employeeLNameField.getText().length()>0){
                    if(employeePosField.getText().length()>0){
                        try{
                            DatabaseObj.executeEmployeesAppendQ(employeeIDField.getText(),employeeFNameField.getText(),employeeLNameField.getText(),employeePosField.getText());
                            JOptionPane.showMessageDialog(this,"Employee Added Successfully","Confirmation", JOptionPane.WARNING_MESSAGE);
                            employeeIDField.setText("");
                            employeeFNameField.setText("");
                            employeeLNameField.setText("");
                            employeePosField.setText("");
                        }catch(Exception e){
                            System.out.println(e.toString());
                            errorLogger.writeToLogger(e.toString());
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"Position Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this,"Employee LName Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this,"Employee FName Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Employee ID Field Empty Or Too Long","Try Again", JOptionPane.WARNING_MESSAGE);
        }
        
             
    }//GEN-LAST:event_employeeAddButtonActionPerformed

    private void areaUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaUpdateButtonActionPerformed
        // TODO add your handling code here:
        String goal = areaGoalField.getText();
        String startDate = startDateTextField.getText();
        String toDate = endDateTextField.getText();
        ArrayList<Integer> theSelected = new ArrayList<Integer>();
        
        if(isInteger(goal)){
            if(goal.length()>0){
                try{
                    
                    for(int selected:areasTable.getSelectedRows()){
                        int rowID = (int)areasTable.getValueAt(selected, 0);
                        DatabaseObj.executeUpdateAreaGoalQ(rowID, Integer.parseInt(goal));
                    }
           
                    areaGoalField.setText("");
                    Object[][] ob = makeEntryObjectFromArray(DatabaseObj.executeGetAreasQ(startDate,toDate),areasTableColumn);
                    areasEntriesModel = new DefaultTableModel(ob,areasTableColumn);
                    areasTable.setModel(areasEntriesModel); 
                    initTableStyle(areasTable);
                }catch(Exception e){
                    System.out.println(e.toString());
                    errorLogger.writeToLogger(e.toString());
                }
            }else{
                JOptionPane.showMessageDialog(this,"Goal Field Empty","Try Again", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Number Values Only","Try Again", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_areaUpdateButtonActionPerformed

    private void selectorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorMenuItemActionPerformed
        // TODO add your handling code here:
        initFrame frame = new initFrame();
        frame.run();
        dispose();
    }//GEN-LAST:event_selectorMenuItemActionPerformed

    private void startDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateTextFieldActionPerformed

    private void casesQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casesQueryButtonActionPerformed
        // TODO add your handling code here:
       try{
           if(casesValueField.getText().length()>0){
               Object[][] ob = makeEntryObjectFromArray(DatabaseObj.executeGetCasesQ(
                    (String)casesFieldCB.getSelectedItem(),(String)casesConditionCB.getSelectedItem(),casesValueField.getText()),caseTableColumn);

                caseEntriesModel = new DefaultTableModel(ob,caseTableColumn);
                casesTable.setModel(caseEntriesModel); 
                initTableStyle(casesTable);
           }
            
       }catch(Exception e){
           System.out.println(e.toString());
       }
        
        
//        initTableStyle(areasTable);
    }//GEN-LAST:event_casesQueryButtonActionPerformed

    private void casesFieldCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_casesFieldCBItemStateChanged
        // TODO add your handling code here:
        casesConditionCB.removeAllItems();
        casesConditionCB.setEnabled(false);
        casesValueField.setEnabled(false);
        
        switch((String)casesFieldCB.getSelectedItem()){
            case "DateOfEntry":
                System.out.println("DateOfEntry");
                casesConditionCB.addItem("=");
                casesConditionCB.setEnabled(true);
                casesValueField.setEnabled(true);
                break;
            case "EmployeeID":
                System.out.println("EmployeeID");
                casesConditionCB.addItem("=");
                casesConditionCB.setEnabled(true);
                casesValueField.setEnabled(true);
                break;
            case "CaseID":
                System.out.println("CaseID");
                casesConditionCB.addItem("=");
                casesConditionCB.setEnabled(true);
                casesValueField.setEnabled(true);
                break;
            case "TotalUnits":
                System.out.println("TotalUnits");
                casesConditionCB.addItem(">");
                casesConditionCB.addItem("<");
                casesConditionCB.addItem("=");
                casesConditionCB.setEnabled(true);
                casesValueField.setEnabled(true);
                break;
            case "UserID":
                System.out.println("UserID");
                casesConditionCB.addItem("=");
                casesConditionCB.setEnabled(true);
                casesValueField.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_casesFieldCBItemStateChanged

    private void dbTabbedPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dbTabbedPaneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dbTabbedPaneFocusGained

    private void devicesAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devicesAddButtonActionPerformed
        // TODO add your handling code here:
 
        JPanel labels = new JPanel(new GridLayout(0,1,2,2));
        labels.add(new JLabel("Enter New Device Name", SwingConstants.CENTER));
        labels.add(new JTextField());

        String option = JOptionPane.showInputDialog(labels, "Enter New Device Name");
        
        if(option != null){
            if(!option.isEmpty()){
                
                    option = option.toLowerCase();
                    System.out.println(option);
                    try{
                        DatabaseObj.executeAddDeviceColumnQ(option);
                        
                        DatabaseObj.getDevicesQuery();
        
                        for(String item:DatabaseObj.getDevicesList()){
                            if(!devicesListArray.contains(item)){
                                devicesList.add(item);
                                devicesListArray.add(item);
                            }
                        }
                    }catch(Exception e){
                        System.out.println(e.toString());
                    }
            }else{
                JOptionPane.showMessageDialog(this, "Enter Device Name");
            }
        }

    }//GEN-LAST:event_devicesAddButtonActionPerformed

    private void devicesRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devicesRemoveButtonActionPerformed
        // TODO add your handling code here:
        if(devicesList.getSelectedIndexes().length>0){
            if(devicesList.getSelectedItem()!=null){
                try{
                    
                    DatabaseObj.executeRemoveDeviceColumnQ(devicesList.getSelectedItem());
                    
                    DatabaseObj.getDevicesQuery();
        
                    for(String item:DatabaseObj.getDevicesList()){
                        if(!devicesListArray.contains(item)){
                            devicesList.add(item);
                            devicesListArray.add(item);
                        }
                    }
                }catch(Exception e){
                    System.out.println(e.toString());
                }
            }
        }
    }//GEN-LAST:event_devicesRemoveButtonActionPerformed

    public void initProdCol(){
        
        ArrayList<Object> objList = new ArrayList<Object>();
        objList.add("TechID");
        objList.add("FName");
        objList.add("LName");
        
        try{
            if(DatabaseObj.getStatusBoolean()){
                for(String device:Files.readAllLines(Paths.get("Data\\devicesList.txt"))){
                    objList.add(device);
                }
            }else{
                
                for(Object device:DatabaseObj.getDevicesList()){
                    objList.add(device);
                }
            }
            
        }catch(Exception e){
            System.out.println(e.toString());
        }
        
        objList.add("Total");
        
        prodColumn = objList.toArray();
        
    }
    
    public static boolean isInteger(String s) {
        try { 
            Integer.parseInt(s); 
        } catch(NumberFormatException e) { 
            return false; 
        } catch(NullPointerException e) {
            return false;
        }
        // only got here if we didn't return false
        return true;
    }
    /**
     * @param args the command line arguments
     */
    
   
    
    public void run(){
           /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseFrame().setVisible(true);
            }
        }); 

    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFailButton;
    private javax.swing.JComboBox<String> areaComboBox;
    private javax.swing.JTextField areaGoalField;
    private javax.swing.JLabel areaLabel;
    private javax.swing.JLabel areaLabel1;
    private javax.swing.JButton areaUpdateButton;
    private javax.swing.JButton areasQueryButton;
    private javax.swing.JTable areasTable;
    private javax.swing.JComboBox<String> casesConditionCB;
    private javax.swing.JComboBox<String> casesFieldCB;
    private javax.swing.JButton casesQueryButton;
    private javax.swing.JTable casesTable;
    private javax.swing.JTextField casesValueField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel dateLabel1;
    private javax.swing.JLabel dateRangeLabel;
    private javax.swing.JComboBox<String> dayCB;
    private javax.swing.JTabbedPane dbTabbedPane;
    private javax.swing.JPanel devicePanel;
    private javax.swing.JButton devicesAddButton;
    private java.awt.List devicesList;
    private javax.swing.JButton devicesRemoveButton;
    private javax.swing.JButton employeeAddButton;
    private javax.swing.JTextField employeeFNameField;
    private javax.swing.JTextField employeeIDField;
    private javax.swing.JTextField employeeLNameField;
    private javax.swing.JTextField employeePosField;
    private javax.swing.JButton employeesDelButton;
    private javax.swing.JButton employeesQueryButton;
    private javax.swing.JTable employeesTable;
    private javax.swing.JFormattedTextField endDateTextField;
    private javax.swing.JLabel endLabel;
    private javax.swing.JTabbedPane entryProdTab;
    private javax.swing.JComboBox<String> failAreaCB;
    private javax.swing.JComboBox<String> failDayCB;
    private javax.swing.JTextField failDeviceField;
    private javax.swing.JTextField failEmployeeField;
    private javax.swing.JTable failEntriesTable;
    private javax.swing.JButton failListDeleteButton;
    private javax.swing.JTable failListTable;
    private javax.swing.JComboBox<String> failMonthCB;
    private javax.swing.JButton failQueryButton;
    private javax.swing.JComboBox<String> failShiftCB;
    private javax.swing.JTable failTable;
    private javax.swing.JTextField failTypeField;
    private javax.swing.JFormattedTextField failYearTextField;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane mainPanel;
    private javax.swing.JComboBox<String> monthCB;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JTable prodTable;
    private javax.swing.JButton queryButton;
    private javax.swing.JMenuItem selectorMenuItem;
    private javax.swing.JComboBox<String> shiftComboBox;
    private javax.swing.JLabel shiftLabel;
    private javax.swing.JLabel shiftLabel1;
    private javax.swing.JFormattedTextField startDateTextField;
    private javax.swing.JLabel startLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTable theTable;
    private javax.swing.JLabel toLabel;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JFormattedTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
