/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exceltest;

import java.io.File;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Vince
 */
public class initFrame extends javax.swing.JFrame {

    /**
     * Creates new form initFrame
     */
    String[] options = {"Outbound Tool","Case Production Tool","Label Generator","Database Tool (login required)"};
    JFileChooser fileChooser;
    FileNameExtensionFilter filter;
    String databaseLocation;
    String skuLocation;
        
    public initFrame() {
        initComponents();
        
        fileChooser = new JFileChooser();
        databaseLocation = null;
        skuLocation = null;
        
        filter = new FileNameExtensionFilter(
                "Microsoft Access Database (.accdb)","accdb");
            
        statusLabel.setText(DatabaseObj.getStatus());
        skuLabel.setText(DatabaseObj.getSKUStatus());
        
        for(String item:options){
            appList.add(item);
        }
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectLabel = new javax.swing.JLabel();
        appList = new java.awt.List();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        dbConnectionLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        skuLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        dbConnectMenuItem = new javax.swing.JMenuItem();
        skuDBMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Outbound Selector");
        setResizable(false);

        selectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectLabel.setText("Select Application");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        statusLabel.setForeground(new java.awt.Color(102, 102, 102));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText(" ");

        dbConnectionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dbConnectionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dbConnectionLabel.setText("Database Connection");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SKU Connection");

        skuLabel.setForeground(new java.awt.Color(102, 102, 102));
        skuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        skuLabel.setText(" ");

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        dbConnectMenuItem.setText("Connect To DB");
        dbConnectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbConnectMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(dbConnectMenuItem);

        skuDBMenuItem.setText("Connect To SKUdB");
        skuDBMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skuDBMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(skuDBMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dbConnectionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(appList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(skuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skuLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dbConnectionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectLabel)
                .addGap(6, 6, 6)
                .addComponent(appList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        int choice = 0;
        
        if(appList.getSelectedItems().length>0){
            
            if(!DatabaseObj.getStatusBoolean()){
                choice = JOptionPane.showConfirmDialog(this, "Database Not Connected or Offline, Continue?","Status Offline",JOptionPane.YES_NO_OPTION);
            }else if(!DatabaseObj.getSKUStatusBoolean()){
                choice = JOptionPane.showConfirmDialog(this, "SKU Database Not Connected or Offline, Continue?","Status Offline",JOptionPane.YES_NO_OPTION);
            }
            
            if(choice == 0){
                switch(appList.getSelectedItem()){
                    case "Outbound Tool":
                        mainFrame frame = new mainFrame();
                        frame.run();
                        dispose();
                        break;
                    case "Database Tool (login required)":
                        DatabaseFrame dbFrame = new DatabaseFrame();
                        dbFrame.run();
                        dispose();
                        break;
                    case "Label Generator":
                        techLabeler labeler = new techLabeler();
                        labeler.run();
                        dispose();
                        break;
                    case "Case Production Tool":
                        caseProdFrame caseFrame = new caseProdFrame();
                        caseFrame.run();
                        dispose();
                        break;
                }
            }
            
        }
        
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void dbConnectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbConnectMenuItemActionPerformed
        // TODO add your handling code here:
        File file;
        
        fileChooser.setCurrentDirectory(new java.io.File("."));
        fileChooser.setDialogTitle("Select File");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
          file = fileChooser.getSelectedFile();
          databaseLocation = file.getAbsolutePath();
          writeToFileSave();
          DatabaseObj.reEstablishConnection();
          statusLabel.setText(DatabaseObj.getStatus());
        }else {
          System.out.println("No Selection ");
        }
    }//GEN-LAST:event_dbConnectMenuItemActionPerformed

    private void skuDBMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skuDBMenuItemActionPerformed
        // TODO add your handling code here:
        File file;
        
        fileChooser.setCurrentDirectory(new java.io.File("."));
        fileChooser.setDialogTitle("Select File");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
          file = fileChooser.getSelectedFile();
          skuLocation = file.getAbsolutePath();
          writeSKUToFileSave();
          DatabaseObj.reEstablishSKUConnection();
          skuLabel.setText(DatabaseObj.getSKUStatus());
        }else {
          System.out.println("No Selection ");
        }
    }//GEN-LAST:event_skuDBMenuItemActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void writeToFileSave(){
        
        try{
            PrintWriter writer = new PrintWriter("Data\\dbLocation.txt", "UTF-8");
            
            writer.println(databaseLocation);

            writer.close();

        }catch(Exception e){
            System.out.println("WriteToFileSave");
            errorLogger.writeToLogger(e.toString());
        }
   
    }
    
    private void writeSKUToFileSave(){
        
        try{
            PrintWriter skuWriter = new PrintWriter("Data\\skuLocation.txt", "UTF-8");

            skuWriter.println(skuLocation);

            skuWriter.close();
            
        }catch(Exception e){
            System.out.println("WriteToFileSave");
            errorLogger.writeToLogger(e.toString());
        }
   
    }
    
    /**
     * @param args the command line arguments
     */
    
    public void run(){
                java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new initFrame().setVisible(true);
            }
        });
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(initFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(initFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(initFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(initFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.List appList;
    private javax.swing.JButton cancelButton;
    private javax.swing.JMenuItem dbConnectMenuItem;
    private javax.swing.JLabel dbConnectionLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JMenuItem skuDBMenuItem;
    private javax.swing.JLabel skuLabel;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
